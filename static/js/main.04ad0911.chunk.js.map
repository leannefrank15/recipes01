{"version":3,"sources":["Recipes.js","App.js","reportWebVitals.js","index.js","recipesty.module.css"],"names":["recipes","title","cals","img","ingredients","cautions","className","style","recipe_name","imgsty","src","alt","caloriez","ings","listStyle","map","ing_obj","text","App","useState","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","finaldata","hits","console","log","fontWeight","onSubmit","event_obj","preventDefault","type","placeholder","value","onChange","target","class","recipe_obj","Recipes","recipe","label","calories","image","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAoBeA,EAjBC,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,YAA2B,EAAdC,SAC/C,OACE,gCACE,oBAAIC,UAAWC,IAAMC,YAArB,SAAmCP,IACnC,qBAAKK,UAAWC,IAAME,OAAQC,IAAKP,EAAKQ,IAAI,cAC5C,oBAAGL,UAAWC,IAAMK,SAApB,uBAAyCV,KACzC,qBAAII,UAAWC,IAAMM,KAAKN,MAAO,CAACO,UAAW,QAA7C,yBAEE,uBACCV,EAAYW,KAAI,SAAAC,GAAO,OACtB,6BAAKA,EAAQC,iBC4CRC,MArDf,WAGE,IAIA,EAA8BC,mBAAS,IAAvC,mBAAOnB,EAAP,KAAgBoB,EAAhB,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAA0BH,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAIAC,qBAAU,WACRC,MACA,CAACH,IAEH,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAff,WAee,oBAdd,qCAaG,cACXM,EADW,gBAEOA,EAASC,OAFhB,OAEXC,EAFW,OAGjBX,EAAWW,EAAUC,MACrBC,QAAQC,IAAIH,GAJK,2CAAH,qDAkBhB,OACE,sBAAKzB,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,kCACA,oBAAIC,MAAO,CAAC4B,WAAY,UAAxB,4CACA,uBAAMC,SAXQ,SAAAC,GAChBA,EAAUC,iBACVd,EAASH,IASoBf,UAAU,cAArC,UACE,uBAAOiC,KAAK,OAAOC,YAAY,gBAAgBlC,UAAU,aAAamC,MAAOpB,EAAQqB,SAhBtE,SAACL,GACpBf,EAAUe,EAAUM,OAAOF,UAgBvB,wBAAQF,KAAK,SAASjC,UAAU,gBAAhC,mBAEF,qBAAKsC,MAAM,cAAX,SACC5C,EAAQe,KAAI,SAAA8B,GAAU,OACrB,cAACC,EAAD,CAAS7C,MAAO4C,EAAWE,OAAOC,MAAO9C,KAAM2C,EAAWE,OAAOE,SACjE9C,IAAK0C,EAAWE,OAAOG,MAAqC9C,YAAayC,EAAWE,OAAO3C,aAAxDyC,EAAWE,OAAOC,gBCtC9CG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,0BAA0B,YAAc,+BAA+B,SAAW,4BAA4B,KAAO,2B","file":"static/js/main.04ad0911.chunk.js","sourcesContent":["import React from 'react'\r\nimport style from './recipesty.module.css'\r\n\r\nconst recipes = ({title, cals, img, ingredients, cautions}) => {\r\n  return (\r\n    <div>\r\n      <h2 className={style.recipe_name}>{title}</h2>\r\n      <img className={style.imgsty} src={img} alt=\"not found\"/>\r\n      <p className={style.caloriez}>calories: {cals}</p>\r\n      <ul className={style.ings}style={{listStyle: 'none'}}>\r\n        ingredients:\r\n        <br/>\r\n        {ingredients.map(ing_obj =>(\r\n          <li>{ing_obj.text}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default recipes;","import React, {useEffect, useState} from 'react'\nimport './App.css'\nimport Recipes from './Recipes';\n\nfunction App() {\n\n  //we use a recipe API from edamam to get all the recipes\n  const app_id = 'c2db2b9d';\n  const app_key = '28c12baa0daef0150cf24dd147638fb8';\n  \n\n  const [recipes, setRecipes] = useState([]) //here setRecipes is the update function & count is the state variable\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('') //default value of query variable is strawberry\n\n  // eslint-disable-next-line\n\n  useEffect(()=>{\n    getRecipes();\n  },[query])\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${app_id}&app_key=${app_key}`)\n    const finaldata=  await response.json();\n    setRecipes(finaldata.hits);\n    console.log(finaldata);\n  }\n\n  const updateSearch = (event_obj) => {\n    setSearch(event_obj.target.value);\n  }\n\n  const getSearch = event_obj => {\n    event_obj.preventDefault();\n    setQuery(search);\n  }\n\n\n\n  return (\n    <div className='App'>\n      <h1 className=\"heading\">Welcome to Recipes01</h1>\n      <h3 style={{fontWeight: 'normal'}}>what are you lookin for today?</h3>\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input type='text' placeholder=\"search here..\" className='search-bar' value={search} onChange={updateSearch}/>\n        <button type='submit' className='search-button'>Go</button>\n      </form>\n      <div class='maincontent'>\n      {recipes.map(recipe_obj => (\n        <Recipes title={recipe_obj.recipe.label} cals={recipe_obj.recipe.calories}\n        img={recipe_obj.recipe.image} key={recipe_obj.recipe.label} ingredients={recipe_obj.recipe.ingredients}/>\n      ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgsty\":\"recipesty_imgsty__3vG4t\",\"recipe_name\":\"recipesty_recipe_name__1u7g4\",\"caloriez\":\"recipesty_caloriez__3G8yH\",\"ings\":\"recipesty_ings__25kLR\"};"],"sourceRoot":""}